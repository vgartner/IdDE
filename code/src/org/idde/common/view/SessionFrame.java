/**
 * Task frame.
 *
 * \b Package: \n
 * org.idde.chat.view
 *
 * @see org.idde.chat
 * @see org.idde.chat.view
 *
 * @since Class created on 27/10/2010
 *
 * @author Vilson Cristiano Gartner [vgartner@gmail.com]
 *
 * \b Maintainers: \n
 * Vilson Cristiano Gartner [vgartner@gmail.com]
 *
 * \b License: \n
 * Licensed under BSD License {@link http://www.opensource.org/licenses/bsd-license.php}
 *
 * @version $Id$
 */
package org.idde.common.view;

import com.thoughtworks.xstream.XStream;
import java.sql.SQLException;
import java.util.Iterator;
import java.util.Set;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import org.idde.common.model.Contact;
import org.idde.common.model.InstructionDBModel;
import org.idde.common.model.XMPPManager;
import org.idde.common.transport.Instruction;
import org.idde.common.model.InstructionProtocol;
import org.idde.task.model.Task;
import org.idde.util.Database;
import org.idde.util.Util;
import org.jivesoftware.smack.XMPPConnection;
import org.openide.util.Exceptions;
import org.tmatesoft.sqljet.core.SqlJetException;

/**
 *
 * @author  remy
 */
public class SessionFrame extends javax.swing.JFrame
{

    /**
     *
     */
    private static final long serialVersionUID = -7266858009982252487L;
    private XMPPConnection connection;

    public SessionFrame()
    {
        initComponents();
    }

    public SessionFrame(String fileName)
    {
        initComponents();
        lblFileName.setText(fileName);

        Set changes = null;
        try
        {
            changes = Database.getSessionInstructions(fileName);
        }
        catch (SqlJetException ex)
        {
            Exceptions.printStackTrace(ex);
        }

        Object[] objArray = null;
        Iterator i = null;

        if ( changes != null )
        {
            objArray = changes.toArray();
            i = changes.iterator();
        }

        int row = 0;

        String data[][] = {};
        String[] columnNames = {"Instruction", "Offset", "Lenght", "String", "Author", "Date / Time"};

        DefaultTableModel model = new DefaultTableModel(data, columnNames);
        table.setModel(model);

        for(int index=0; index < objArray.length ; index++)
        {
            System.out.println(objArray[index]);

            String instr  = ((InstructionDBModel) (objArray[index])).getInstruction();
            String offset = ((InstructionDBModel) (objArray[index])).getOffset().toString();
            String lenght = ((InstructionDBModel) (objArray[index])).getLenght().toString();
            String string = ((InstructionDBModel) (objArray[index])).getText();
            String author = ((InstructionDBModel) (objArray[index])).getUser();
            String timest = ((InstructionDBModel) (objArray[index])).getDateTime().toString();
            
            model.insertRow(row, new Object[] {instr, offset, lenght, string, author, timest});
        }


    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblFileName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setTitle("IdDE - Session Changes");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("All changes made on file");

        lblFileName.setText("fileName");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 273, Short.MAX_VALUE)
                .addComponent(lblFileName)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblFileName))
                .addContainerGap())
        );

        table.setAutoCreateRowSorter(true);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Instruction", "Offset", "Lenght", "String", "Author", "Date / Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);
        table.getColumnModel().getColumn(4).setResizable(false);
        table.getColumnModel().getColumn(5).setResizable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFileName;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    
}

/**
 * MainPanel
 *
 * \b Package: \n
 * org.idde.chat.view
 *
 * @see org.idde.chat
 * @see org.idde.chat.view
 *
 * @since Class created on 04/10/2010
 *
 * @author Vilson Cristiano Gartner [vgartner@gmail.com]
 *
 * \b Maintainers: \n
 * Vilson Cristiano Gartner [vgartner@gmail.com]
 *
 * \b License: \n
 * Licensed under BSD License {@link http://www.opensource.org/licenses/bsd-license.php}
 * Many ideas and code are based on shortalk {@link http://code.google.com/p/shortalk/}
 *
 * @version $Id$
 */
package org.idde.chat.view;

import java.beans.PropertyChangeEvent;

import org.idde.chat.controller.DefaultController;

import org.idde.chat.controller.Properties;
import org.idde.sip.model.SIPManager;

/**
 *
 * @author  remy
 */
public class MainPanel extends AbstractViewPanel {

    /**
     *
     */
    private static final long serialVersionUID = 986537474922412872L;

    java.util.ResourceBundle bundle;

    /** 
     * Creates new form mainPanel
     * @param controllerXMPP
     */
    public MainPanel(DefaultController controller) {
        this.controller = controller;
        bundle = org.idde.util.ResourceManager.getBundle();
        initComponents();
        init();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        statusBarPane = new javax.swing.JPanel();
        statusLabel = new javax.swing.JLabel();
        mainScrollPane = new javax.swing.JScrollPane();
        scrolledMainPanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblSIPStatus = new javax.swing.JLabel();
        SIPScroll = new javax.swing.JScrollPane();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setPreferredSize(new java.awt.Dimension(240, 480));

        statusBarPane.setBorder(javax.swing.BorderFactory.createTitledBorder("XMPP:"));
        statusBarPane.setPreferredSize(new java.awt.Dimension(294, 27));

        statusLabel.setIcon(org.idde.chat.view.StatusIcons.ICON_RED);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("org/idde/lang/Bundle"); // NOI18N
        statusLabel.setText(bundle.getString("DISCONNECTED")); // NOI18N

        javax.swing.GroupLayout statusBarPaneLayout = new javax.swing.GroupLayout(statusBarPane);
        statusBarPane.setLayout(statusBarPaneLayout);
        statusBarPaneLayout.setHorizontalGroup(
            statusBarPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
        );
        statusBarPaneLayout.setVerticalGroup(
            statusBarPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 15, Short.MAX_VALUE)
        );

        mainScrollPane.setPreferredSize(new java.awt.Dimension(233, 403));

        scrolledMainPanel.setPreferredSize(new java.awt.Dimension(230, 450));

        javax.swing.GroupLayout scrolledMainPanelLayout = new javax.swing.GroupLayout(scrolledMainPanel);
        scrolledMainPanel.setLayout(scrolledMainPanelLayout);
        scrolledMainPanelLayout.setHorizontalGroup(
            scrolledMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 231, Short.MAX_VALUE)
        );
        scrolledMainPanelLayout.setVerticalGroup(
            scrolledMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        mainScrollPane.setViewportView(scrolledMainPanel);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("SIP:"));

        lblSIPStatus.setText("not registered");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblSIPStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblSIPStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        SIPScroll.setBorder(javax.swing.BorderFactory.createTitledBorder("SIP:"));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SIPScroll, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(statusBarPane, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2))
            .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(mainScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 352, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SIPScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(statusBarPane, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        SIPScroll.getAccessibleContext().setAccessibleName("SIPCall");
    }// </editor-fold>//GEN-END:initComponents

    private void init() {
        connectionPanel = new ConnectionPanel(controller);
        mainScrollPane.setViewportView(connectionPanel);
        controller.addView(connectionPanel);

        contactListPanel = new ContactListPanel(controller);
        controller.addView(contactListPanel);
    }

    public void modelPropertyChange(PropertyChangeEvent evt) {

        //Connection Events
        if ( evt.getPropertyName().equals("SIPConection") )
        {
            System.out.println("******\n******\n******\n******\n  **** Model roperty Change:  "  +  evt.getPropertyName() +  evt.getNewValue());
        }

        if (evt.getPropertyName().equals(Properties.CONNECTED.toString())) {
            if ((Boolean) evt.getNewValue()) {
                //Update status bar
                statusLabel.setText(bundle.getString("CONNECTED"));
                statusLabel.setIcon(StatusIcons.ICON_YELLOW);
            } else {
                //Update status bar
                statusLabel.setText(bundle.getString("DISCONNECTED"));
                statusLabel.setIcon(StatusIcons.ICON_RED);

                //Display connection parameters
                mainScrollPane.setViewportView(connectionPanel);
            }
        } else if (evt.getPropertyName().equals(Properties.AUTHENTICATED.toString())) {
            if ((Boolean) evt.getNewValue()) {
                //Update status bar
                statusLabel.setText(bundle.getString("AUTHENTICATED"));
                statusLabel.setIcon(StatusIcons.ICON_GREEN);

                //Display contact list
                mainScrollPane.setViewportView(contactListPanel);

                // SIP
                org.idde.sip.peers.gui.MainSIPFrame frame = new org.idde.sip.peers.gui.MainSIPFrame();
                SIPScroll.setViewportView( frame );
                controller.addView(frame);

                lblSIPStatus.setText(frame.getStatus());

                if ( frame.getStatus().equals(SIPManager.STATUS_REGISTERED) )
                {
                    lblSIPStatus.setIcon(StatusIcons.ICON_GREEN);
                }
                else
                {
                    lblSIPStatus.setIcon(StatusIcons.ICON_YELLOW);
                }

            } else {
                //Update status bar
                statusLabel.setText( bundle.getString("NOT_AUTHENTICATED"));
                statusLabel.setIcon(StatusIcons.ICON_YELLOW);

                //Display connection parameters
                mainScrollPane.setViewportView(connectionPanel);
            }
        }
    }

    public DefaultController getController() {
        return controller;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane SIPScroll;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblSIPStatus;
    private javax.swing.JScrollPane mainScrollPane;
    private javax.swing.JPanel scrolledMainPanel;
    private javax.swing.JPanel statusBarPane;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
    //Other variables
    private DefaultController controller;
    private ConnectionPanel connectionPanel;
    private ContactListPanel contactListPanel;
    //End
}

/**
 * Chat frame.
 *
 * \b Package: \n
 * org.idde.chat.view
 *
 * @see org.idde.chat
 * @see org.idde.chat.view
 *
 * @since Class created on 04/10/2010
 *
 * @author Vilson Cristiano Gartner [vgartner@gmail.com]
 *
 * \b Maintainers: \n
 * Vilson Cristiano Gartner [vgartner@gmail.com]
 *
 * \b License: \n
 * Licensed under BSD License {@link http://www.opensource.org/licenses/bsd-license.php}
 * Many ideas and code are based on shortalk {@link http://code.google.com/p/shortalk/}
 *
 * @version $Id$
 */
package org.idde.chat.view;

import com.thoughtworks.xstream.XStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.Color;
import javax.swing.text.BadLocationException;
import org.idde.chat.controller.DefaultController;
import org.idde.chat.model.Contact;
import org.idde.chat.model.Message;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import org.idde.common.transport.Instruction;
import org.idde.common.transport.InstructionProtocol;
import org.idde.util.ResourceManager;
import org.idde.util.Util;
import org.openide.util.Exceptions;

/**
 *
 * @author  remy
 */
public class ChatFrame extends javax.swing.JFrame
{

    /**
     *
     */
    private static final long serialVersionUID = -7266858009982252487L;
    static private SimpleAttributeSet BLACK = new SimpleAttributeSet();
    static private SimpleAttributeSet BLUE_BOLD = new SimpleAttributeSet();
    static private SimpleAttributeSet RED_BOLD = new SimpleAttributeSet();

    static
    {
        StyleConstants.setForeground(BLACK, Color.black);
        StyleConstants.setForeground(BLUE_BOLD, Color.blue);
        StyleConstants.setBold(BLUE_BOLD, true);
        StyleConstants.setForeground(RED_BOLD, Color.red);
        StyleConstants.setBold(RED_BOLD, true);
    }

    /** Creates new form ChatFrame
     * @param participant
     * @param controller
     */
    public ChatFrame(Contact participant, DefaultController controller)
    {
        this.participant = participant;
        this.controller = controller;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sendButton = new javax.swing.JButton();
        sendScrollPane = new javax.swing.JScrollPane();
        sendTextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        chatPane = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setTitle(this.participant.getNickName());

        sendButton.setText("Enviar");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        sendScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        sendTextArea.setColumns(20);
        sendTextArea.setLineWrap(true);
        sendTextArea.setRows(3);
        sendTextArea.setWrapStyleWord(true);
        sendTextArea.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        sendTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sendTextAreaKeyTyped(evt);
            }
        });
        sendScrollPane.setViewportView(sendTextArea);

        jButton1.setText("Enviar CÃ³digo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(chatPane);

        jLabel1.setText("Mensagem:");

        jButton2.setIcon(new ResourceManager().getSIPIcon("icon_phone-call_16x16.png"));
        jButton2.setText("Call");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sendScrollPane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(sendButton, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sendScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(sendButton)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public DefaultController getController()
    {
        return this.controller;
    }

    private void sendTextAreaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sendTextAreaKeyTyped
        if (evt.getKeyChar() == '\n')
        {
            sendMessage();
        }
    }//GEN-LAST:event_sendTextAreaKeyTyped

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        sendTextArea.append("\n");
        sendMessage();
    }//GEN-LAST:event_sendButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try
        {
            chatPane.getDocument().insertString(chatPane.getDocument().getLength(), "Enviando texto codificado", RED_BOLD);
        }
        catch (BadLocationException ex)
        {
            Exceptions.printStackTrace(ex);
        }

        // arg0 = filename
        // arg1 = insert 2i / delete 2d
        // arg2 = offset
        // arg3 = lenght
        // arg4 = text (if edit)

        Instruction i = new Instruction(InstructionProtocol.MSG_UPDATE_SHARED_TEXT, "File.java", "2i", "125", "6", "cabelo");

        XStream xstream = new XStream();
        xstream.alias(InstructionProtocol.IdDE_ID, Instruction.class);

        Message msg = new Message();
        msg.setTo(this.participant);
        msg.setMessage(xstream.toXML(i));
        controller.sendMessage(msg);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        org.idde.sip.peers.gui.MainFrameOriginal frame = new org.idde.sip.peers.gui.MainFrameOriginal();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void sendMessage()
    {
        if (!sendTextArea.getText().matches("^[\n\t ]*$"))
        {
            Message msg = new Message();
            msg.setTo(this.participant);
            msg.setMessage(sendTextArea.getText());
            controller.sendMessage(msg);
            sendTextArea.setText("");

            try
            {
                chatPane.getDocument().insertString(chatPane.getDocument().getLength(), Util.getCurrentTime(), BLACK);
                chatPane.getDocument().insertString(chatPane.getDocument().getLength(), " eu ", BLUE_BOLD);
                chatPane.getDocument().insertString(chatPane.getDocument().getLength(), msg.getMessage(), BLACK);
                insertNewLine();
                chatPane.setCaretPosition(chatPane.getDocument().getLength());
            }
            catch (BadLocationException ex)
            {
                Logger.getLogger(ChatFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            sendTextArea.setText("");
        }
    }

    /**
     *
     * @param msg
     */
    public void receivedMessage(Message msg)
    {
        try
        {
            chatPane.getDocument().insertString(chatPane.getDocument().getLength(), Util.getCurrentTime(), BLACK);
            chatPane.getDocument().insertString(chatPane.getDocument().getLength(), " " + msg.getFrom().getNickName(), RED_BOLD);
            chatPane.getDocument().insertString(chatPane.getDocument().getLength(), " " + msg.getMessage(), BLACK);
            insertNewLine();
            chatPane.setCaretPosition(chatPane.getDocument().getLength());
        }
        catch (BadLocationException ex)
        {
            Logger.getLogger(ChatFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void insertNewLine()
    {
        if (!chatPane.getText().endsWith("\n"))
        {
            try
            {
                chatPane.getDocument().insertString(chatPane.getDocument().getLength(), "\n", BLACK);
            }
            catch (BadLocationException ex)
            {
                Logger.getLogger(ChatFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane chatPane;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton sendButton;
    private javax.swing.JScrollPane sendScrollPane;
    private javax.swing.JTextArea sendTextArea;
    // End of variables declaration//GEN-END:variables
    //Other declarations
    private Contact participant;
    private DefaultController controller;
    //End

    public final Contact getParticipant()
    {
        return participant;
    }
}
